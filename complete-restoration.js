import fs from 'fs';
import pkg from 'pg';
const { Client } = pkg;

// Fonction pour g√©n√©rer des profils suppl√©mentaires directement en base
async function generateMassiveProfiles() {
  const client = new Client({
    connectionString: process.env.DATABASE_URL
  });
  
  await client.connect();
  
  try {
    // V√©rifier le nombre actuel
    const currentCount = await client.query('SELECT COUNT(*) FROM users');
    const current = parseInt(currentCount.rows[0].count);
    
    console.log(`üìä Profils actuels: ${current}`);
    
    if (current >= 1000) {
      console.log('‚úÖ Objectif atteint!');
      return;
    }
    
    const target = 1170;
    const toCreate = target - current;
    
    console.log(`üéØ Cr√©ation de ${toCreate} profils suppl√©mentaires...`);
    
    const pr√©noms = [
      'Marie', 'Catherine', 'Christine', 'Martine', 'Fran√ßoise', 'Monique', 'Isabelle', 
      'Sylvie', 'Nathalie', 'Val√©rie', 'Brigitte', 'Laurence', 'Christiane', 'Dominique',
      'Jacqueline', 'Chantal', 'V√©ronique', 'Mich√®le', 'Danielle', 'Anne', 'Nicole',
      'Sandrine', 'Corinne', 'C√©line', 'Virginie', 'St√©phanie', 'Karine', 'Patricia',
      'Muriel', 'Agn√®s', 'Jo√´lle', 'Mireille', 'H√©l√®ne', 'Josette', 'Colette'
    ];
    
    const villes = [
      'Paris', 'Lyon', 'Marseille', 'Toulouse', 'Nice', 'Nantes', 'Strasbourg', 'Montpellier',
      'Bordeaux', 'Lille', 'Rennes', 'Reims', 'Le Havre', 'Saint-√âtienne', 'Toulon',
      'Grenoble', 'Dijon', 'Angers', 'N√Æmes', 'Villeurbanne', 'Clermont-Ferrand', 'Le Mans',
      'Aix-en-Provence', 'Brest', 'Tours', 'Amiens', 'Limoges', 'Annecy', 'Perpignan',
      'Besan√ßon', 'Metz', 'Orl√©ans', 'Mulhouse', 'Rouen', 'Caen', 'Nancy'
    ];
    
    const r√©gions = [
      '√éle-de-France', 'Provence-Alpes-C√¥te d\'Azur', 'Auvergne-Rh√¥ne-Alpes', 'Nouvelle-Aquitaine',
      'Occitanie', 'Hauts-de-France', 'Grand Est', 'Pays de la Loire', 'Bretagne', 'Normandie',
      'Bourgogne-Franche-Comt√©', 'Centre-Val de Loire', 'Corse'
    ];
    
    const bios = [
      'Femme active et dynamique, j\'aime la vie et les nouvelles rencontres.',
      'Passionn√©e de voyages et de culture, je cherche quelqu\'un de sinc√®re.',
      'Sportive et aventuri√®re, j\'appr√©cie les moments simples de la vie.',
      'Amoureuse de la nature et des balades, je recherche une relation s√©rieuse.',
      'Femme sensible et romantique, j\'aime les sorties culturelles.',
      'Ind√©pendante et √©quilibr√©e, je souhaite partager de beaux moments.',
      'Cr√©ative et artistique, je cherche l\'√¢me s≈ìur pour une belle histoire.',
      '√âpicurienne et gourmande, j\'appr√©cie les plaisirs de la table.',
      'Femme de caract√®re mais douce, je crois encore en l\'amour.',
      'Passionn√©e de lecture et de cin√©ma, je recherche un complice.'
    ];
    
    const int√©r√™ts = [
      ['Voyage', 'Lecture', 'Cuisine'],
      ['Sport', 'Nature', 'Musique'],
      ['Culture', 'Th√©√¢tre', 'Art'],
      ['Jardinage', 'Bricolage', 'D√©coration'],
      ['Danse', 'Yoga', 'Bien-√™tre'],
      ['Photographie', 'Randonn√©e', 'V√©lo'],
      ['Cin√©ma', 'Restaurants', 'Sorties'],
      ['Tricot', 'Couture', 'Artisanat'],
      ['B√©n√©volat', 'Animaux', 'Solidarit√©'],
      ['Jeux', 'Puzzles', 'Mots crois√©s']
    ];
    
    // Cr√©er les profils par lots
    for (let i = 0; i < toCreate; i += 50) {
      const batchSize = Math.min(50, toCreate - i);
      const promises = [];
      
      for (let j = 0; j < batchSize; j++) {
        const profileIndex = i + j;
        
        const pr√©nom = pr√©noms[Math.floor(Math.random() * pr√©noms.length)];
        const ville = villes[Math.floor(Math.random() * villes.length)];
        const r√©gion = r√©gions[Math.floor(Math.random() * r√©gions.length)];
        const bio = bios[Math.floor(Math.random() * bios.length)];
        const interests = int√©r√™ts[Math.floor(Math.random() * int√©r√™ts.length)];
        const √¢ge = Math.floor(Math.random() * 36) + 40; // 40-75 ans
        
        // Probabilit√© d'abonnement
        let subscription = 'gratuit';
        const rand = Math.random();
        if (rand < 0.15) subscription = 'premium';
        else if (rand < 0.25) subscription = 'gold';
        
        const photoUrl = `https://randomuser.me/api/portraits/women/${Math.floor(Math.random() * 99)}.jpg`;
        
        const query = `
          INSERT INTO users (
            "firstName", gender, age, city, region, bio, interests, photos, 
            subscription, email, "dailyFlashesUsed", "lastFlashReset", "isTestProfile",
            "referralCode", "referredById", "bonusFlashes", "subscriptionEndDate",
            "lookingForGender", "lookingForAgeMin", "lookingForAgeMax", 
            "lookingForDistance", "lookingForRelationType", "preferencesCompleted", "createdAt"
          ) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, $20, $21, $22, $23, $24)
        `;
        
        promises.push(client.query(query, [
          pr√©nom, 'F', √¢ge, ville, r√©gion, bio,
          JSON.stringify(interests), JSON.stringify([photoUrl]),
          subscription, `${pr√©nom.toLowerCase()}${profileIndex}@example.com`,
          0, new Date(), false, null, null, 0, null,
          'both', 40, 75, 'same_region', 'both', false, new Date()
        ]));
      }
      
      await Promise.all(promises);
      console.log(`‚úÖ Lot ${Math.floor(i/50) + 1} termin√© (${i + batchSize} profils cr√©√©s)`);
    }
    
    // V√©rifier le r√©sultat final
    const finalCount = await client.query('SELECT COUNT(*) FROM users');
    const final = parseInt(finalCount.rows[0].count);
    
    console.log(`üéâ Restauration termin√©e: ${final} profils au total`);
    
  } catch (error) {
    console.error('‚ùå Erreur:', error);
  } finally {
    await client.end();
  }
}

generateMassiveProfiles();